[{"content":"Hello World!\n","date":-62135596800,"description":"","objectID":"b47b0fc715aa1aed242364600311f8aa","permalink":"http://localhost:1313/","title":""},{"content":"This is the Hello World from github.io. I prefer this over WIX\n","date":-62135596800,"description":"","objectID":"926e22c4d60e857c6f368c9a0b840802","permalink":"http://localhost:1313/historic/2019-04-29-hello-world/","title":"A Hello Word from the github blog."},{"content":"This is a Windows 10 system My system is a Windows 10/64bit\nDownload, expand and update EMACS_HOME I downloaded the new emacs from the GNU ftp site. The file was https://ftp.gnu.org/gnu/emacs/windows/emacs-26/emacs-26.2-x86_64.zip\nThe downloaded emacs zip was expanded into C:\\Program Files\\Emacs\\emacs-26.2-x86_64 this is my new EMACS_HOME.\nMy shortcuts now all depend on EMACS_HOME I have three shortcut for emacs, the daemon, the client and no-daemon.\nFor the daemon the shortcut target is:\n%EMACS_HOME%\\bin\\runemacs.exe --daemon and starts up in:\n%EMACS_HOME% The client uses this target:\n%EMACS_HOME%\\bin\\emacsclientw.exe -na \u0026amp;#34;%EMACS_HOME%\\bin\\emacsclientw.exe\u0026amp;#34; -c -n The non-daemon target is:\n%EMACS_HOME%\\bin\\runemacs.exe --debug ","date":-62135596800,"description":"","objectID":"a4cac73c3929ada966fc85caa7824acd","permalink":"http://localhost:1313/historic/2019-04-29-update-emacs/","title":"Update emacs to 26.2"},{"content":"Updating SBCL on Windows Download the new installer, http://prdownloads.sourceforge.net/sbcl/sbcl-1.4.14-x86-64-windows-binary.msi. Run the installer, the old SBCL is removed and the new one is installed. I had a few dll which I placed next to my sbcl.exe which remained in the old location. I moved these to the new location. The SBCL_HOME was also reset to the new location.\nMy .emacs file slime-lisp-implemenations is written in terms of SBCL_HOME so it, just works.\n(setq slime-lisp-implementations `( ;; Add SBCL if present ,(when (getenv \u0026amp;#34;SBCL_HOME\u0026amp;#34;) (cond ((eq system-type \u0026amp;#39;windows-nt) `(sbcl (,(convert-standard-filename (concat (getenv \u0026amp;#34;SBCL_HOME\u0026amp;#34;) \u0026amp;#34;sbcl.exe\u0026amp;#34;)) \u0026amp;#34;--noinform\u0026amp;#34;))) (t nil))) ;; Add more LISPs here.. )) ","date":-62135596800,"description":"","objectID":"0067b2376bbc3a031a580a286cf0b2a3","permalink":"http://localhost:1313/historic/2019-04-29-update-sbcl/","title":"Update SBCL to 1.4.14"},{"content":"Whats in a day? 86400 Seconds\nWhen do seconds start counting? January 1, 1970 00:00:00 GMT is the zero second.\nThat is on 2019-05-01 08:39:00 there have been 1541598420 seconds since Jan 1, 1970\nR dates are the number of days since January 1, 1970 This means the numeric date time is date-number*86400\nThe earliest time-code is min(data$TimeCode) and the last time-code in max(data$TimeCode). The begining data-time-window time-code is 86400*as.numeric(min(data$Date)) the ending date-time-window time-code is the beginning plus the window size in seconds.\nThe window is advanced by 86400 seconds until the end of the window is larger than 86400*as.numeric(max(data$Date))\nR code extracting Date and Times. data$CODE \u0026amp;lt;- factor(data$CODE) data$Date \u0026amp;lt;- as.Date(strptime(data$Time , \u0026amp;#34;%m/%d/%y %I:%M %p\u0026amp;#34;)) data$Time \u0026amp;lt;- as.POSIXct(strptime(data$Time , \u0026amp;#34;%m/%d/%y %I:%M %p\u0026amp;#34;)) data$TimeCode \u0026amp;lt;- as.numeric(data$Time) ","date":-62135596800,"description":"","objectID":"75feb4f3a2c42f3823fbc44a68908787","permalink":"http://localhost:1313/historic/2019-05-01-date-formats-for-smoothing/","title":"Smoothing Date formats"},{"content":"Smooth six months twice daily data in R The data is entered on a LibreOffice spread sheet, and read into R wih read_ods(). I adjust the time data like this:\ndata$Time \u0026amp;lt;- as.POSIXct(strptime(data$Time , \u0026amp;#34;%m/%d/%y %I:%M %p\u0026amp;#34;)) data$TimeCode \u0026amp;lt;- as.numeric(data$Time) My goal I want to average all items, within a averaging time window of a given size, for the entire data set, the window starts at the first day of the data set and is advanced a single day until the window is beyond the last day of the data set.\nProblem 1 - initial conditions Find the first and last whole day of the dataset.\nwindow_size\ndataset_start_day dataset_end_day\nProblem 2 - The Increment Increment the window, day by day\nProblem 3 - Collect the averages. Report and graph ","date":-62135596800,"description":"","objectID":"dac7c476a6ba47c76ab76c572c5ffc4e","permalink":"http://localhost:1313/historic/2019-05-01-smooth-averages-in-r/","title":"Smoothing data in R"},{"content":"beautiful-jekyll is a fork of Jekyll-Now Jekyll-Now was good effort by Barry Clarke and https://deanattali.com/beautiful-jekyll/ is an improved fork of Jekyll Now that does not have the Double Scroll box problems. I would recommend starting any new github jekyll blog with Beautiful-Jekyll.\n","date":-62135596800,"description":"","objectID":"225b936869bb57e42e423a3b4d59c7bf","permalink":"http://localhost:1313/historic/2019-05-05-double-scrollboxes/","title":"Use beutiful-jekyll as a github blog to avoid the double scroll in code problems."},{"content":"","date":-62135596800,"description":"","objectID":"1e60edb060fdec07ab1d817c8979ff3c","permalink":"http://localhost:1313/historic/2019-05-22-the-lisp-problem/","title":"The LISP Problem"},{"content":"How we got Common LISP Standard Calculations for atomic weapons and space based delivery systems for the same are the step father the computer industry. LISP is the second oldest high level programming language, FORTRAN was the first. Both conceieved in the 1950s. Artificial Intelligence, a term coined by LISP\u0026amp;rsquo;s father John McCarthy, to pigeon hole the space he was interested in exploring.\nLISP was developed in several dialects thought the \u0026amp;rsquo;80s, a stanard committee was created to create a common dialect which we call Common LISP.\nIt is my belief that the standard committee did a good job on the standard. The \u0026amp;rsquo;80s also brought refined compiler techniques and hardware that makes it possible to run LISP on today\u0026amp;rsquo;s computers.\nMcCarthy upto 1980s The history section of https://en.wikipedia.org/wiki/Lisp_(programming_language)\nThe Standard Committee In 1986 the https://en.wikipedia.org/wiki/X3J13 Committee was created to create a standard for LISP.\nTechinical Referencs and the ANSI Standard This page coves the two versions of the standard through ANSI the standard https://en.wikipedia.org/wiki/Common_Lisp_the_Language\nThe HyperSpec Most discussions of the LISP stamdard are based on the standard base document knonow as the HyperSpec\nhttps://en.wikipedia.org/wiki/Common_Lisp_HyperSpec\n","date":-62135596800,"description":"","objectID":"52b8d5f21dae5c4117789077859d1a01","permalink":"http://localhost:1313/historic/2019-05-24-explaining-lisp-part-1/","title":"The History of LISP"},{"content":"Church, Turing and von Neuman Alonzo Church solved the halting problem with the invention of lambda calculus. Alan Turing solved the equivanent problem by the invention of the Turning machine. John Von Neuman proposed an electronic computer based on the Universal Turing Machine to do physics calculation for nuclear fusion evaluation, his model is the basis for our modern computer systems.\nFORTRAN and LISP The first high level compiled language was FORTRAN. First proposed in 1953 the first compiler was delivered in 1957. In 1958 John McCarthy proposed a language LISP which concerned ideas of Church\u0026amp;rsquo;s lambda calculus. The first compiler was implmented in 1959, during 1962 the first ocmpiler of LISP written completely in LISP was delivered. This was an incremental compiler which piece by piece compiled itself. This began the tradition of the interactive REPL that is part of today\u0026amp;rsquo;s LISP system, as a consequence the concept of the IMAGE of a LISP system was also developed.\nMy Model for a computer This is my rough description of the von Neuman architecture.\nAn Input Device or Stream A CPU with control, math and logic units A Memory unit An Output Device or Stream How a LISP REPL maps to the computer Input is READ The read form is evaluated by the CPU Changes in the LISP Image are memory The Output is PRINTED ","date":-62135596800,"description":"","objectID":"f4da056b95627fe2a58b7bfb7fe2f167","permalink":"http://localhost:1313/historic/2019-05-28-notes-1/","title":"Tom's explanation of LISP history"},{"content":"Building CLISP on gitlab Attempt to build CLISP on gitlab as a CI project.\nMultiple platform support. CLISP can be built on many platforms. Among them are\nWindows MSC mingw64 - a Unix cygwin - a Unix MacOS - I don\u0026amp;rsquo;t have this. Unix Linux FreeBDS CLISP documentation For Windows - install.WINDOWS For UNIX - unix/INSTALL For Porting general - unix/PLATFORMS General Approach for docker build Create a base platform with all needed dependecies Do the configure and build Do the tests. Export the build artifacts Each platform is defined by a key string The build tools are a large case statement based on the key string, or perhaps there is a key.platform statement which tells the specific build conditions and methods.\n","date":-62135596800,"description":"","objectID":"167b9b952448e6fe79499d04e61073b2","permalink":"http://localhost:1313/historic/2019-07-12-building-clisp/","title":"building CLISP"},{"content":"Building CLISP dependencies. Design a general build process. Specify requirements build a prototype report considerations is it suffiencent? Yes - move to a release build No - Report; modify requirement and iterate Requirements artifacts in a docker volume\nWhere docker can find it. Can gitlab find it too? source in a docker volume\nsource means current source The source is updatable The source is versionable docker issues ?? gitlab issues ?? build log is accessable\nThis is for the build level Success - for deep debug Failure - for debug docker considerations\nresearch report gitlab considerations\nresearch report versioning considerations\nresearch report multi-platform considerations\nJust try and then unify report ","date":-62135596800,"description":"","objectID":"3c207fc8c3d47def7402c3fe633295e2","permalink":"http://localhost:1313/historic/2019-07-14-buildiing-clisp-pt-2-building-dependencies/","title":"building CLISP - Dependencies"},{"content":"Report on source updating. A gitlab rebuild is in response to a branch push.\nReport on building prototype An example prototype of a CLISP build system could be libsigsegv\nPrerequisite to CLISP Multi platform - release artifacts are Git hosted on savanah How the build(s) are structured There is a build interface There are instances of Runner for each artifact target. Each runner has a tag - the tag is platform/artifact type. ","date":-62135596800,"description":"","objectID":"0f795a4d9d68c71a308eb79b0145ea99","permalink":"http://localhost:1313/historic/2019-07-15-source-version/","title":"Report on source containers"},{"content":"How to well meaning team got into a conflict Git for Windows is based on it\u0026amp;rsquo;s own code on the msys2/mingw-64 code base. The msys2/mingw-64 team uses a patched based contribution system to rebuild it\u0026amp;rsquo;s system. The msys2/mingw-64 system is built as a series of packages, by a recipe which includes patching of the source code at build time.\nGit for windows includes many of the same tool but builds them from a single git repository.\n","date":-62135596800,"description":"","objectID":"4310d1d7971b6d5f02962b59116f1aaa","permalink":"http://localhost:1313/historic/2019-07-16-git-v-patches/","title":"git V the Patch"},{"content":"Construct a base cygwin docker environment The basic method is to choose a windows base environment, next interactively install cygwin in a host directory, use https://www.cygwin.com/setup-x86_64.exe Install apt-cyg from https://github.com/ilatypov/apt-cyg/blob/master/apt-cyg in the docker image. Using docker create an image with the cygwin host directory copied to the guest docker image: use docker cp\nUsing this process an image was created https://cloud.docker.com/u/tomrake/repository/docker/tomrake/cygwin\nNext iteration Need to add a normal user.\n","date":-62135596800,"description":"","objectID":"24edfcfef704c8b1f01761b7aa755f5b","permalink":"http://localhost:1313/historic/2019-07-26-build-a-cygwin-environment-for-gitlab/","title":"Build a CYGWIN environment in docker."},{"content":"This Critic closed see Cycle 2 Critic of Build a CYGWIN environment in docker. AddUser needs debugging, fails to work as expected Build the base CYGWIN environment. UI Automation UI Automation is an automation tools for Windows UI. Can a powershell script build the base CYGWIN image?\nCan this be done in the docker windows image? likely no. Can cygwin install be automated? likely yes. UIAutomation.dll how to get it? Best Instructions The UIAutomation.dll file is in a cryptic named file which need to be extracted. The best instructions for how are at https://community.spiceworks.com/how_to/160771-how-to-obtain-and-install-uiautomation-dll.\nAdditional Instuctions for Unblocking Internet origin files. Powershell will taint all internet origin files and refuse to execute them you must Unblock each file to use it. Where every the downloaded files for UIAutomation are to be used, rather Import-Module UIAutomaion.dll you must do an Unblock-File UIAutomaion.dll. I actually expand the entire NET4.0 distribution into a UIAutomation\\NET40 and then\ncd UIAutomation\\NET40 dir | Unblock-File to Unblock all files in the directory.\nHow do I automate these the install process? The first iteration is over Set next interation. Restate the CYGWIN enviroment for testing and building Consider using Selenium / Appium tool ","date":-62135596800,"description":"","objectID":"92f271bc65d608c69b4ec6739a6e8b40","permalink":"http://localhost:1313/historic/2019-07-30-critic-build-a-cygwin-environment/","title":"Critic of Build a Cygwin Environment - Cycle 1"},{"content":"Construct a base cygwin docker environment Appium install method Using Appium and inspect.exe script can be written to automate the cygwin download and install.\nPhase one is to test that a target can be build, where the source is my machine the appium host. The cygwin image is copied to the target machine from my build host.\nPhase two is to see if the build can be done on the target machine directly.\nPhase three is to have the appium host in a separate docker container.\nsystems needed for Appium install method. appium host - Node.js host which includes the Appium server. target - the docker container being built. cygwin install host - this may be the target host or a separate host. The base docker image is use to build up the base cygwin image. The basic method is to choose a windows base environment, next interactively install cygwin in a host directory, use https://www.cygwin.com/setup-x86_64.exe. This image can be downloaded by System.Net.WebClient see https://blog.jourdant.me/post/3-ways-to-download-files-with-powershell. Appium is used to execute and install the cygwin base packages plus any other desired packages.\nInstall apt-cyg from https://github.com/ilatypov/apt-cyg/blob/master/apt-cyg in the docker image. The powershell method used to download the cygwin installer can be used to get the apt-cyg fils. Using docker create an image with the cygwin host directory copied to the guest docker image: use docker cp\nUsing this process an image was created https://cloud.docker.com/u/tomrake/repository/docker/tomrake/cygwin\nNext iteration Need to add a normal user.\n","date":-62135596800,"description":"","objectID":"b826401f907a79638ff29d643de0b976","permalink":"http://localhost:1313/historic/2019-08-07-build-a-cygwin-environment-v02/","title":"Build a CYGWIN environment in docker Rev 02."},{"content":"Dynamic variables Early versions of LISP had Dynamic variables. This distinguished those variable from the Static ones which are largely fixed. Things were fairly simple under this scheme but more complex for the programmers.\nLexical variable and Closures Later LISPs developed \u0026amp;ldquo;lexical\u0026amp;rdquo; bindings where the scope of the variables was limited by enclosing forms with in the text of LISP code, lexical is borrowed from the lexical analsys phase of compilers.\nScope Scope defines how a symbol defined in the code text can be referenced. LISP though LET forms bind symbol within the body of the LET.\n","date":-62135596800,"description":"","objectID":"55c7de1eff3120851e4ae7f37f5250f6","permalink":"http://localhost:1313/historic/2019-08-25-scope-and-extent-of-lisp-bindings/","title":"Scope and Extent of LISP Bindings"},{"content":"In the redesign process for automation for cygwin in a docker container the following needs to be considered.\nConsiderations Appium or WinAppDriver based scripts The inclusion of WinAppDriver in target container. Configuration of WinAppDriver ports A developer language - Can I use common lisp? Scripting of automation Terms A Task a specified activity A Documented Structure a solution to Task. A Coded Structure a completely coded solution to a Task. Thoughts Proof of concepts demostrates how to perform a certain activity leading to documentation and/or coding of a Task. Issues about ports and appium for direct WebAppDriver relate to \u0026amp;ldquo;the stucture\u0026amp;rdquo; of the proposed solution to a task. A Coded Structure is prefered over a Documented Structure. Resources WinAppDriver Docs page WebAppDriver Docs on Appium or WebAppDriver Common Lisp Selenium Tutorial ","date":-62135596800,"description":"","objectID":"071c2cc182bfb054134859992aaa5ad6","permalink":"http://localhost:1313/historic/2019-08-31-appium-winappdriver/","title":"Appium, WinAppDriver design considerations"},{"content":"This view is of a higher level To allow docker process isolation of our target container we start with a specific version container. It is desired that this process will work for all relased OS versions.\nUsing GUI Install of a component\u0026amp;hellip; Large complexities of any scripted GUI install, require a design period to create extract the necessary GUI element info, an install method design and debug process, an orchestraion design using GUI install toolkit.\n\u0026amp;hellip; or not Downloads of installers with command line execution using docker. Copying of files and folders using docker.\nThe Overview of the building process 1) Start with a base container. Choose a container version that can be used with docker \u0026amp;ndash;isolation=process. The derived containers will use less resources, there is a security trade-off in this decision.\n2) Create a WinAppDriver enabled container. Using the WinAppDriver Install Process is expected to be non-GUI.\n3) A docker container with a base CYGWIN installed Download the base cygwin installer, a non-GUI operation.\nInstall cygwin base - a GUI operation.\nAt this point decide on apt-cyg v. more GUI install There is a choice to use a externally developed script to update installed cygwin packages. The trade-offs are depend on a large bash like shell script or invest in time to construct a complex javascript based GUI install. Or to furthor invest in a LISP based WinAppDriver client.\napt-cyg is a command line like cygwin updater given a package list and the install can is done.\nThe navigation of the CYGWIN GUI to install a package list could be a very complex script. This put the entire process under our control.\nStatus of support methods orchestration design, still in exploration or hacking phase. GUI Install toolkit, about 70% hacked, javascript based. GUI Install toolkit, GUI element extraction had been in (POC) proof of concept for weeks. GUI Install toolki in LISP, about 10% hacked. apt-cyg install is an alpha product. docker, download and …","date":-62135596800,"description":"","objectID":"ea6f925776ea60fa25b81a4c0078a7d1","permalink":"http://localhost:1313/historic/2019-09-04-build-a-cygwin-environment-v03/","title":"Build a CYGWIN environment in docker Rev 03."},{"content":"Redesign for reliablity Current useage Main Client uses a FileHistoryHost volumn and a Bugzilla server FileHistoryHost is a shared Windows Volumn from the host. FileHistoryHost also run a VirtualBox. A VM debian is run on the VirualBox. VM debian runs a Bugzilla service. VM debian runs a MariaDB service. Bugzilla service uses MariaDB as a store. VM debian does backup the Bugzilla database to FileHistory Host. Former Main Client needs Fan Repair. BlueSky Wishes Backup as a service with switchable archive servers MariaDB in separate VM or container Bugzilla in separate VM or container A development build service - likely Gitlab Runner based. ","date":-62135596800,"description":"","objectID":"c4e779b4b6b7052c742e772829ca1b79","permalink":"http://localhost:1313/historic/2019-09-16-support-services/","title":"Local Support Services Design"},{"content":"Ephemeral + Customization Launch an ephemeral vm with customized environment. All permanent state is stored in an attached environment. The vm can be killed or restarted without data loss.\n","date":-62135596800,"description":"","objectID":"65e762e42abbc75b6e25536aed318f70","permalink":"http://localhost:1313/historic/2019-09-18-ephemeral-customization/","tags":["ephemeral","custom"],"title":"Ephemeral Customization"},{"content":"The source for info on MSYS2 I refer to the Detailed Install Guide Section III Updating packages.\nInstructions In MSYS2 shell execute pacman -Syuu follow the instructions about terminating the shell process, I just close the window, and say OK to the termination dialog. Repeat until no more upgrades.\n","date":-62135596800,"description":"","objectID":"8c2f28ed56459fea2556870dfdd24ae7","permalink":"http://localhost:1313/historic/2019-11-22-msys2-upgrade/","title":"MSYS2 Upgrade"},{"content":"There is no current Chocolatey package from SBCL! SBCL 2.0.0 on 12/29/2019 which include a windows installer. There is a homebrew package for SBCL (see https://formulae.brew.sh/formula/sbcl#default ) so MacOS has a current SBCL. When you check for Chocolatey package from SBCL (see https://chocolatey.org/packages/sbcl ) you find a package had a error 5 years ago.\nThe old chocolatey package is not maintained. A new chocolatey package should be created and a maintence procedure should be created. The best strategy is to introduce a script chocolatey release script into the SBCL release code in the SBCL build source code.\n","date":-62135596800,"description":"","objectID":"217adbeafb1fb2ecdd91c55e6b8d0c60","permalink":"http://localhost:1313/historic/2020-01-28-sbcl-chocolatey/","title":"SBCL on Windows, where is chocolatey package?"},{"content":"Software is brittle A change of a single character in the source code can cause a failure. When debugging these type brittle errors are fixes. It is only with testing to address the brittle points that software can become useful.\nSoftware systems can be brittle The inspiration for this post is the difficulties I am having using SBCL on Windows 10. I have viewed SBCL as a unix product with limited support for the Windows port. Code has been contributed that assumes \u0026amp;ldquo;the unix way\u0026amp;rdquo; of thinking (should I say the New Jersey way?)\nThe SBCL brittle points My problem is that some foreign function and object conversions functions is SBCL give me problems on Windows 10. While I am focused on a possible deep problem of contribs overly focused on unix conventions is at the root of my problems, it could be that do not under stand the compiler technology well enough.\nHere is my unix focused convention outline. SBCL has a concept called the grovel in sb-grovel, which is focused on foreign interfacing. The brittle points concern the binary interfacing done by SBCL itself and the layout of the foreign typed objects.\nSBCL is largely written in LISP with binary sections written in C, the C conventions for binary layout are specified in C. Some C binary conventions are deterined by the C compiler.\nLISP has elements that implement many low level binary constructs with fussy details that differ from C conventions.\nWindows 10 has different OS structure vrs unix and these are the main focus of SBCL porting issues. When you add optimization to porting on differnt OS.\nLLVM focused tools Some in the unix world have focused on the LLVM compiler technology, as a solution for automatic function definition. This approach has it\u0026amp;rsquo;s own brittle pointed related to changed in the version by version changes in AST format of the parsed code. In addition it fails to deals with the preprocessor problems inherent in with C code. On Windows this is a whole separate problem.\n","date":-62135596800,"description":"","objectID":"33264097d5798e0b58fa02e345bd7d7d","permalink":"http://localhost:1313/historic/2020-03-04-brittle-technology/","title":"The Brittle Nature of Technology"},{"content":"Make mingw64/sbcl run from slime. In a previous post I created a sbcl which runs from the mingw64 shell. When I run sbcl from the ming64 prompt all works as expected but running it from CMD causes sbcl to complain that the core was built for another runtime.\nThis problem has two potential solutions:\nCompile sbcl with CMD runtime. Start a bash login shell and run sbcl programatically. Option 1) requires I study the make process and possible build SBCL under MSYS2 by directing make to use mingw64 gcc.\nHere is my current solution for option 2)\n(defun lisp-mingw64-implementation-4 (tag) `(,tag (,(concat +msys64-base-path+ \u0026amp;#34;usr/bin/env.exe\u0026amp;#34;) \u0026amp;#34;MSYSTEM=MINGW64\u0026amp;#34; ,(concat +msys64-base-path+ \u0026amp;#34;usr/bin/bash.exe\u0026amp;#34;) \u0026amp;#34;-l\u0026amp;#34; \u0026amp;#34;-c\u0026amp;#34; \u0026amp;#34;/usr/local/bin/sbcl\u0026amp;#34; \u0026amp;#34;--noinform\u0026amp;#34;))) (setq slime-lisp-implementations `(,(when (file-exists-p (concat +msys64-base-path+ \u0026amp;#34;/usr/local/bin/sbcl.exe\u0026amp;#34;)) (lisp-mingw64-implementation-4 \u0026amp;#39;mingw64-sbcl)))) lisp-mingw-implementation-4 where env create an enviroment with MSYSTEM=MINGW64 in that enviroment bash is created as a login shell, which initialized a series of things. next sbcl is launched by that bash shell with appropriate parameters.\n","date":-62135596800,"description":"","objectID":"2c96e5c826cee3ba29f96d9e70ed23d0","permalink":"http://localhost:1313/historic/2020-03-15-run-mingw64-compiled-sbcl-from-emacs-slime/","title":"Run sbcl, mingw64 version, from emacs slime."},{"content":"I am experimenting with a SBCL compiled for mingw64 I use the Solarian Programmer\u0026amp;rsquo;s Guide to build SBCL under mingw64. I am building the 2.0.0 from source.\nI have MSYS2 installed at C:\\devel\\msys64 which is /c/devel/msys64 in MSYS2.\nI have the binary windows distribution of SBCL 2.0.0 at /c/devel/SBCL_2_0_0-bin and I keep the sources at /c/devel/SBCL_2_0_0-src this includes the source.tar.bz2 the binary msi, as well as the expanded source.\nI used these steps at MSYS command line do:\npacman -Syu Respond Y when asked for confirmation. When the updating is done close the MSYS2 window don\u0026amp;rsquo;t do an exit.\nRestart a MSYS2 shell and do:\npacman -Syu pacman -S mingw-w64-x86_64-toolchain pacman -S bzip2 exit I downloaded the binary sbcl-2.0.0-x86-64-windows.msi to C:\\devel\\SBCL_2_0_0-src. Next I installed the MSI at C:\\devel\\SBCL_2_0_0-bin, SBCL was not added to the PATH and SBCL_HOME was not set. I downloaded the raw source sbcl-2.0.0-source.tar.bz2 to C:\\devel\\SBCL_2_0_0-src.\n# SBCL 2.0.0 is used for compile export PATH=/c/devel/SBCL_2_0_0:$PATH export SBCL_HOME=/c/devel/SBCL_2_0_0 cd /c/devel/SBCL_2_0_0-src tar xfj sbcl-2.0.0-source.tar.bz2 # Define GNUMAKE export GNUMAKE=mingw32-make # Enter the source directory and make cd /c/devel/SBCL_2_0_0-src/sbcl-2.0.0 sh make.sh --prefix=/usr/local # if no errors in build then install. unset SBCL_HOME sh install.sh Use sbcl to start SBCL lisp on the mingw64 bash command line. You cannot launch sbcl directly from the CMD shell.\n","date":-62135596800,"description":"","objectID":"7770d7988a93aa9f28cf9022e7646fd5","permalink":"http://localhost:1313/historic/2020-03-15-sbcl-compile-under-ming64/","title":"Compile SBCL 2.0.0 under mingw64"},{"content":"COVID-19 requires me to reloacate My setup the hardware Kodi running on a Raspberry Pi, wired link to a home router Kore an App running on an Android phone connected via wireless. My configuration Kodi Remote Server is configure on a local IP address at port 8080, User Name and Password. Kore a Remote Client is configured to use the above server address, port, name and pw. The Kore problem One moring my Kore remote stopped working due to a crashed home router. The main symptom other than non-function was that the Kore - Media Center (selected from the left hamburger) icon had RED icon. This icon should be GREEN when the client can connect to the server. When connecting the icon may be YELLOW.\nWhat you need to keep nearby You need the IP, port, login name and pw for the Kodi Remote server. This should allow you to open connections from the Kore app to the Kodi server.\nNOTES: I only use stock Kodi software, or software I have modified for testing, please do not ask me how to modify Kodi for any nefarious purpose.\n","date":-62135596800,"description":"","objectID":"df26aab9772e7cac3f53553877e974e7","permalink":"http://localhost:1313/historic/2020-04-23-kore-kodi/","title":"Problems with KORE remote for KODI"},{"content":"The lockdown I am in an isolated location with one of my parents. COVID-19 changed all my planing.\nIt has been a long time since I have blogged.\nThe routing setup The router is a WRT54G and there is wired extension to a DLink WBR-1310. I previously used another WRT54G at the extension position but that is in use at my orgininal location, which I and my wife use on weekly basis.\nIt seems that the WRT54G on about a weekly basis stops serving dhcp addresses. To counter that problem I have been allocating IP addresses statically. This has reduced the downtime but I still have and android phone and table which allocated addresses by dhcp.\nAbout org-mode In the past months I have adoped emacs org-mode to document much of my work. I use org-mode to keep the static ip addresses I mentioned above. I have code documentation and planning in org-mode. I should convert this blog over to org-mode.\n","date":-62135596800,"description":"","objectID":"a14ed1ff39dc5f1ffd0390deb9b0bb94","permalink":"http://localhost:1313/historic/2020-08-04-update/","title":"What's been going on."},{"content":"Trump is in denial over the coronavirus. There is a limit to the power of positive thinking. At every stage Trump has voiced a rosy scenario about the coronaviurs, only 15 cases, it will be gone by summer. Persistently the negative truth presents itself. The coronavirus is a threat to be reckoned with and not dismissed.\nTrump loyalist are contributing to his dysfunction I believe the loyal Trump supporters in the White house are still presenting him with rosy pictures. Pleasing Trump is more important than factual presenttions. Reality has a very tough way of presenting itself in light of the coronavirus. But the rosy supporters may just move on.\nEver read the fine print? \u0026amp;quot;During a pandemic outbreak CFR is a poor measure of fatality rate for the disease.\u0026amp;quot; It is on your graphic? https://t.co/iloz5MpN10\n\u0026amp;mdash; IsWhatItIsRake (@tomrake) July 8, 2020 On July 7,2020 I posted a tweet about a graphic in a tweet posted by the\rTrump War Room. Which includes a disclaimer about CFR (Case Fatality Rate) being a poor\rmetric of fatality rate of the virus.\rThe president has waved around graphs during the Jonathon Swan interview, what is the source of those charts. During the interview Trump insisted that cases are the only thing that mattered and per capita death rates are to me ignored. This is not a rational position.\nIf you look at the website of the July 7 post you can see various statistics and most of them show how poorly the United States is doing relative to other countries in handling the coronavirus.\nThis is a problem for the Trump and Republican elections. Over half the population knows somebody that has had the coronavirus. There are 2.3 million official cases, the infection rate is estimated to be 10x the case rate so 23 million. The population of the United States is 320 million. If people know about 20 distinct people that can cover the population.\nThe denial game will not work in this case like many other Trump Foes. The coronavirus cannot be forced away …","date":-62135596800,"description":"","objectID":"bf24f87aba371189460c2960721a7574","permalink":"http://localhost:1313/historic/2020-08-05-trump-in-denial/","title":"Trump is in denial over the coronavirus."},{"content":" Twitter users are running for the exits On Twitter national security and political view are expressed by many of those I follow, and today many are moving to mastodon. Last night while auditioning mastodon as a Twitter replacement, I was feeling I did not get the information I desired all the posts etc. Mastodon is not heavy on the recommendation engine, if there is one, and you are more in control of what you see in your Home feed. You are the algorithm. Facebook About 15 years ago I was frustrated with Facebook why did it send me stuff and how do I find that stuff again. On Facebook the users are the product, your attention is marketed to advertisers. Twitter In the past I have used Twitter to review releases of other long form information web postings from government and companies. I would follow those entities and get the latest information to review. MAGA The MAGA King choose Twitter as the platform of 2016 to 2021. I began to follow top MAGA media figures and anti MAGA sources. 2017 was a difficult transition, members of my family and acquaintances had been radicalized by the MAGA world, some were at the conspiratorial stage. Eventually I found a series of sources to follow based on my interests in legal, national security, military and government policies, and Twitter became hot. I liked what the Twitter algorithm sent to me during 2020. My review of these events, now in 2022, seems to support the view that the Facebook and Twitter algorithms were part of the outrage machine that entered the global discourse in 2015. The Billionaire Rocketman Twitter has had a difficult time being profitable. The Billionaire Rocketman purchased Twitter with a billion dollar non-refundable deal, he then sued in Delaware and lost. His first efforts were to drag the Twitter machinery through the sandy mud by firing people by email and then regretting is a few days later. The people I value on Twitter started joining mastodon. Where is the Mastodon algorithm My conclusion this …","date":-62135596800,"description":"","objectID":"2d713c489036ccc013fd0ba36331a0c3","permalink":"http://localhost:1313/historic/2022-11-07-0001-mastodon/","tags":["mastodon"],"title":"Where is the algorithm on Mastodon"},{"content":"\rBREAKING\rMiddle Earth\rIn a report from the Bree Daily, Sauron, of Mordor, has reportedly paid 44 Billion Dollars in exchange for a Seer Stone called \u0026#34;Twitter\u0026#34;,\ra dollar being some odd foreign currency made of paper.\rMayor Sam Gamgee, of Bag End, has been quoted that\r\u0026#34;he knows nothing of any of Sauron\u0026#39;s latest dealings\u0026#34; but\ris \u0026#34;quite certain that no Rings of Power are involved.\u0026#34;\rNone of the other hobbit Adventurers could be reached for comment.\rIn other headlines from the Shire, ByWater and Beyond\rThe Inn at Bree has collected a great number of oddly colored checkmarks.\rMayor Sam Gamgee\u0026#39;s daughter Elanor has won the tight rope walking contest.\rRumors still abound at the Green Dragon Tavern about the missing Frodo Baggins.\rThis report was updated to correct the spelling of Sam Gamgee\u0026#39;s name.\r","date":-62135596800,"description":"","objectID":"1be70e341c5e1f8e4320f6dbbe814785","permalink":"http://localhost:1313/historic/2022-11-13-sauron-buys-twitter/","tags":["twitter"],"title":"Sauron buys Twitter!!"},{"content":"\rI have updated blogging procedure\rThis is of a technical interest on how I actually produce my blog. I have always written by blog pages in emacs and\rhistorically have authored in Markdown syntax and the Beautiful Jekyll theme on GitHub.\rI now author my pages in org mode and use org-publish to render them to the Jekyll repository.\rNext I ensure that the blog posts are in the _posts/ folder and commit those changes to the git image of my site.\rFinally, I upload and push my local site to GitHub.\rHow each post is constructed\rAll my pages need a special header which looks like this.\r#+OPTIONS: toc:nil num:nil\r#+BEGIN_EXPORT html\r---\rlayout: post\rtitle: \u0026#34;Updating my site with org-mode\u0026#34;\rpermalink: /:title/\rtags: [blog, org-mode]\r---\r#+END_EXPORT\rI then use org-mode to write and format my text.\rMy org-publish of blog renders all the pages into _drafs/ folder where the jekyll image is located.\rI move the post from the _drafts/ folder into the _posts/ folder which makes the post live.\rAdding the post to the jekyll image by a git add followed by a git commit.\rA git push origin master causes the changed website live.\r","date":-62135596800,"description":"","objectID":"7f363619e35480afe78c8922fd22d620","permalink":"http://localhost:1313/historic/2022-11-15-0001-blogging-site-update/","tags":["blog","org-mode"],"title":"Updating my site with org-mode"},{"content":"\rDISQUS Install\rInstallation of [DISQUS](https://disqus.com/) for this blog.\rUpdates my disqus account, on my site which has the [Beautiful Jekyll](https://beautifuljekyll.com/) Theme\runcomment the disqus line in _config.yml and add my Disqus short name from the General Page on my Disqus account.\rI want to allow comments on this post I add comments: yes to my front matter.\rFirst try\rHope it works.\r","date":-62135596800,"description":"","objectID":"9d62f20826c23c3f318034bda28ff0ac","permalink":"http://localhost:1313/historic/2022-11-16-0001-disqus-comments/","tags":["mastodon"],"title":"Adding DISQUS comments."},{"content":"\rA few days ago I did a series of hashtag searches and found groups of conversations of a bunch of interesting topics.\rHashtags add speed and excitement to Mastodon.\rGiven that Mastodon has no global text search except for hashtags and there is a reason for it.\rMastodon was designed with \u0026#34;friction\u0026#34; to slow down the propagation of information.\rBy forcing propagation of post through posts of individuals and the lack of site wide search.\rMastodon promote small conversations and not the quick spread of mass outrage\rA Cheesy example of Food Hate speech on Mastodon.\rLet\u0026#39;s say your aim is naked aggressive hate of cheese, and your passion is spewing hate at all cheese lovers on internet.\rOn the bird site you could search for \u0026#34;cheese\u0026#34; and easily find all the suspected members of your hated cheese cabal,\rand very easily spew nasty remarks to fans of the evil dairy product.\rOn Mastodon there is no global text search, so you would have to spend time finding all the member of the cabal you hate so much,\rlinking then to their Mastodon IDs,\rit is much more likely you would spend time somewhere that is not connected with Mastodon.\rMastodon has global search for hashtags, the #cheese-sucks hashtag could be a place to organize your cheese hate strike force.\rOf course everyone else can also see your by your public and well known hashtag,\ryou would eventually be banned by hateful acts, and with no respect to positions any positions on cheese.\rLawfare posts have hashtags\rLawfare Blog one of my favorite source for legal and intelligence community view points and they are now listing their various posts with hashtags on Mastodon,\rhere is an example - Democracy After the Midterms\rby Quinta Jurecic attaches the hashtags #USElections #USPolitics #Biden #DonaldTrump #America.\rI follow Quinta on Mastodon, so I expect posts like her article but the hash point to other viewpoints on related topics.\rThis is a very good example many if not all Lawfareblog articles are well-thought-out and deserve …","date":-62135596800,"description":"","objectID":"0a63eb124977912c954efc5e97c3aa34","permalink":"http://localhost:1313/historic/2022-11-17-0001-mastodon-update-01/","tags":["mastodon"],"title":"Mastodon Culture - Search and Hashtags"}]